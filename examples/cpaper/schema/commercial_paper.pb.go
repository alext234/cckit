// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commercial_paper.proto

/*
Package schema is a generated protocol buffer package.

It is generated from these files:
	commercial_paper.proto

It has these top-level messages:
	CommercialPaper
*/
package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommercialPaper_State int32

const (
	CommercialPaper_ISSUED   CommercialPaper_State = 0
	CommercialPaper_TRADING  CommercialPaper_State = 1
	CommercialPaper_REDEEMED CommercialPaper_State = 2
)

var CommercialPaper_State_name = map[int32]string{
	0: "ISSUED",
	1: "TRADING",
	2: "REDEEMED",
}
var CommercialPaper_State_value = map[string]int32{
	"ISSUED":   0,
	"TRADING":  1,
	"REDEEMED": 2,
}

func (x CommercialPaper_State) String() string {
	return proto.EnumName(CommercialPaper_State_name, int32(x))
}
func (CommercialPaper_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type CommercialPaper struct {
	Paper        string                     `protobuf:"bytes,1,opt,name=paper" json:"paper,omitempty"`
	Issuer       string                     `protobuf:"bytes,2,opt,name=issuer" json:"issuer,omitempty"`
	Owner        string                     `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	IssueDate    *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=issue_date,json=issueDate" json:"issue_date,omitempty"`
	MaturityDate *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=maturity_date,json=maturityDate" json:"maturity_date,omitempty"`
	FaceValue    int32                      `protobuf:"varint,6,opt,name=face_value,json=faceValue" json:"face_value,omitempty"`
	State        CommercialPaper_State      `protobuf:"varint,7,opt,name=state,enum=schema.CommercialPaper_State" json:"state,omitempty"`
}

func (m *CommercialPaper) Reset()                    { *m = CommercialPaper{} }
func (m *CommercialPaper) String() string            { return proto.CompactTextString(m) }
func (*CommercialPaper) ProtoMessage()               {}
func (*CommercialPaper) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommercialPaper) GetPaper() string {
	if m != nil {
		return m.Paper
	}
	return ""
}

func (m *CommercialPaper) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *CommercialPaper) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *CommercialPaper) GetIssueDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *CommercialPaper) GetMaturityDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.MaturityDate
	}
	return nil
}

func (m *CommercialPaper) GetFaceValue() int32 {
	if m != nil {
		return m.FaceValue
	}
	return 0
}

func (m *CommercialPaper) GetState() CommercialPaper_State {
	if m != nil {
		return m.State
	}
	return CommercialPaper_ISSUED
}

func init() {
	proto.RegisterType((*CommercialPaper)(nil), "schema.CommercialPaper")
	proto.RegisterEnum("schema.CommercialPaper_State", CommercialPaper_State_name, CommercialPaper_State_value)
}

func init() { proto.RegisterFile("commercial_paper.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4b, 0xfb, 0x30,
	0x1c, 0xc5, 0x7f, 0xe9, 0xcf, 0x76, 0xf6, 0xbb, 0xa9, 0x25, 0xc8, 0x28, 0x83, 0x61, 0xd9, 0xa9,
	0xa7, 0x0c, 0xb6, 0x93, 0x27, 0x11, 0x5b, 0x64, 0x07, 0x45, 0xd2, 0xe9, 0xb5, 0x64, 0x35, 0x9b,
	0x85, 0xc6, 0x94, 0x34, 0x55, 0xfc, 0x43, 0xfd, 0x7f, 0x24, 0x89, 0xf5, 0xe0, 0xc5, 0xe3, 0x7b,
	0xdf, 0xcf, 0x7b, 0x3c, 0xbe, 0x30, 0xad, 0xa4, 0x10, 0x5c, 0x55, 0x35, 0x6b, 0xca, 0x96, 0xb5,
	0x5c, 0x91, 0x56, 0x49, 0x2d, 0x71, 0xd0, 0x55, 0x2f, 0x5c, 0xb0, 0xd9, 0xc5, 0x41, 0xca, 0x43,
	0xc3, 0x97, 0xd6, 0xdd, 0xf5, 0xfb, 0xa5, 0xae, 0x05, 0xef, 0x34, 0x13, 0xad, 0x03, 0x17, 0x9f,
	0x1e, 0x9c, 0xdd, 0xfc, 0x74, 0x3c, 0x98, 0x0a, 0x7c, 0x0e, 0xbe, 0xed, 0x8a, 0x51, 0x82, 0xd2,
	0x90, 0x3a, 0x81, 0xa7, 0x10, 0xd4, 0x5d, 0xd7, 0x73, 0x15, 0x7b, 0xd6, 0xfe, 0x56, 0x86, 0x96,
	0xef, 0xaf, 0x5c, 0xc5, 0xff, 0x1d, 0x6d, 0x05, 0xbe, 0x04, 0xb0, 0xf7, 0xf2, 0x99, 0x69, 0x1e,
	0x1f, 0x25, 0x28, 0x1d, 0xaf, 0x66, 0xc4, 0xad, 0x21, 0xc3, 0x1a, 0xb2, 0x1d, 0xd6, 0xd0, 0xd0,
	0xd2, 0x19, 0xd3, 0x1c, 0x5f, 0xc1, 0x89, 0x60, 0xba, 0x57, 0xb5, 0xfe, 0x70, 0x69, 0xff, 0xcf,
	0xf4, 0x64, 0x08, 0xd8, 0x82, 0x39, 0xc0, 0x9e, 0x55, 0xbc, 0x7c, 0x63, 0x4d, 0xcf, 0xe3, 0x20,
	0x41, 0xa9, 0x4f, 0x43, 0xe3, 0x3c, 0x19, 0x03, 0xaf, 0xc1, 0xef, 0xb4, 0xe9, 0x1d, 0x25, 0x28,
	0x3d, 0x5d, 0xcd, 0x89, 0xfb, 0x15, 0xf9, 0xf5, 0x06, 0x52, 0x18, 0x88, 0x3a, 0x76, 0x41, 0xc0,
	0xb7, 0x1a, 0x03, 0x04, 0x9b, 0xa2, 0x78, 0xcc, 0xb3, 0xe8, 0x1f, 0x1e, 0xc3, 0x68, 0x4b, 0xaf,
	0xb3, 0xcd, 0xfd, 0x6d, 0x84, 0xf0, 0x04, 0x8e, 0x69, 0x9e, 0xe5, 0xf9, 0x5d, 0x9e, 0x45, 0xde,
	0x2e, 0xb0, 0x2b, 0xd7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xf8, 0x51, 0x74, 0xa1, 0x01,
	0x00, 0x00,
}
